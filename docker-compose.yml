services:
  db:
    image: postgres:15-alpine
    container_name: payverify_db_prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-payverify}
      POSTGRES_USER: ${POSTGRES_USER:-payverify}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-payverify123}
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-payverify} -d ${POSTGRES_DB:-payverify}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks: [ payverify_net ]

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: payverify_web_prod
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-payverify}
      - POSTGRES_USER=${POSTGRES_USER:-payverify}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-payverify123}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - USE_POSTGRES=True
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - DEBUG=${DEBUG:-True}
      - HOST_IP=${HOST_IP:-192.168.139.81}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-https://mis.dmed.uz,http://192.168.139.81,https://192.168.139.81,chrome-extension://peifjgpicbnlpobobglipjgbmpkmcafh}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-192.168.139.81,localhost}
      - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS:-http://192.168.139.81,https://192.168.139.81,http://localhost,https://localhost}
    depends_on:
      db:
        condition: service_healthy
    expose:
      - "8000"
    volumes:
      - ./staticfiles:/app/staticfiles
      - media_volume_prod:/app/media
    networks: [ payverify_net ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/medical_access/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: payverify_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./staticfiles:/var/www/static:ro
      - media_volume_prod:/var/www/media:ro
    depends_on:
      - web
    networks: [ payverify_net ]

volumes:
  pgdata_prod:
  media_volume_prod:

networks:
  payverify_net:
    driver: bridge